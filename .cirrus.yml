main_task:
  container:
    image: rust:latest
  cargo_cache:
    folder: $CARGO_HOME/registry
    fingerprint_script: cargo update && cat Cargo.lock
  env:
    matrix:
      - ETHOX_FEATURES:
      - ETHOX_FEATURES: alloc
      - ETHOX_FEATURES: std
      - ETHOX_FEATURES: sys
      - ETHOX_FEATURES: alloc sys
      - ETHOX_FEATURES: std sys
  build_script:
    - cd ethox
    - cargo build --no-default-features --features "$ETHOX_FEATURES"
  test_script:
    - cd ethox
    - cargo test --no-default-features --features "$ETHOX_FEATURES"
  before_cache_script: rm -rf $CARGO_HOME/registry/index

side_crates_task:
  container:
    image: rust:latest
  cargo_cache:
    folder: $CARGO_HOME/registry
    fingerprint_script: cargo update && cat Cargo.lock
  iperf_script:
    - cd ethox-iperf
    - cargo build --examples --bins
    - cargo test
  no_std_script:
    - cd ethox-no-std
    - cargo build --release
    - ls -sh target/release/raw-ping
    - strip target/release/raw-ping
    - ls -sh target/release/raw-ping
  bpf_script:
    - apt-get update
    - apt-get -y install libpcap-dev
    - cd ethox-bpf
    - cargo test

uring_task:
  container:
    image: rust:1.41.0-alpine3.11
  allow_failures: true
  uring_script:
    - cd ethox-io-uring
    - cargo test

nightly_task:
  container:
    image: rustlang/rust:nightly
  cargo_cache:
    folder: $CARGO_HOME/registry
    fingerprint_script: cargo update && cat Cargo.lock
  test_all_script:
    - cd ethox
    - cargo test --all-features
  before_cache_script: rm -rf $CARGO_HOME/registry/index

doc_task:
  container:
    image: rustlang/rust:nightly
  script:
    - cd ethox
    - cargo doc --no-deps --document-private-items --all-features
