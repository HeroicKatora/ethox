[package]
name = "ethox"
description = "A standalone network stack for user-space networking and unikernels"
authors = ["Andreas Molzer <andreas.molzer@gmx.de>"]
license = "AGPL-3.0-only"
version = "0.0.1-beta"
edition = "2018"

documentation = "https://docs.rs/ethox"
repository = "https://github.com/HeroicKatora/ethox"
keywords = ["network", "ethernet", "tcp"]
categories = ["network-programming", "no-std"]

[badges]
cirrus-ci = { repository = "https://github.com/HeroicKatora/ethox" }
maintenance = { status = "passively-maintained" }

[dependencies]
byteorder = { version = "1.0", default-features = false }
libc = { version = "0.2", default-features = false, optional = true }

[features]
default = ["alloc"]
# Interact with the `alloc` crate from std
alloc = []
# Interact with all of `std`
std = ["alloc"]
# Have libc-based platform dependent sockets
sys = ["libc"]

[dev-dependencies]
structopt = { version = "0.2", default-features = false }

# All examples rely on sys and std for some reason.
#
# sys: Required to open the underlying sockets.
# std: Most due to argument parsing (which is done in std) but also to use
#   stderr and other io portions
[[example]]
name = "debug_tap"
required-features = ["alloc", "sys", "std"]

[[example]]
name = "ping_tap"
required-features = ["alloc", "sys", "std"]

[[example]]
name = "arp_tap"
required-features = ["alloc", "sys", "std"]

[[example]]
name = "curl"
required-features = ["alloc", "sys", "std"]
